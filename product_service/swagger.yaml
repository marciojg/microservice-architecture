openapi: 3.0.1
info:
  title: product_service
  version: 1.0.0
servers:
- url: http://localhost:1001/
paths:
  /products:
    get:
      tags:
      - Products
      summary: Lista os produtos
      description: |
        Lista os produtos, com diversas possibilidades de filtros usando o ransack (https://github.com/activerecord-hackery/ransack)
        Existe também um filtro adicional que ordena os produtos por popularidade `?popular=true`
      parameters:
      - name: popular
        in: query
        description: Ordena a lista de produtos em ordem decrescente de popularidade
        schema:
          type: boolean
          default: true
      - name: q[name_cont]
        in: query
        description: Exemplo de um filtro ransack que filtra produtos que possuam
          azul no nome
        schema:
          type: string
          default: azul
      - name: q[category_id_eq]
        in: query
        description: Exemplo de um filtro ransack que filtra produtos da categoria `Masculino Adulto`
        schema:
          type: number
          default: 1
      responses:
        200:
          description: Retorna uma lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
      - Products
      summary: Cria um produto
      description: Cria um produto e com seu contador de visualizações iniciando com
        zero.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nome do produto
                      example: Camisa Azul
                    value:
                      type: number
                      description: Valor do produto
                      format: float
                      example: 16.097
                    category_id:
                      type: integer
                      description: Id da categoria associada
                      example: 1
        required: true
      responses:
        201:
          description: Retorna o produto criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        204:
          description: Retorna o produto criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-codegen-request-body-name: layout
  /products/{id}:
    get:
      tags:
      - Products
      summary: Exibe um produto
      description: |
        Exibe um produto e seus atributos
        Acrescenta mais um no atributo `total_access` a cada request
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Retorna os detalhes de um produto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
      - Products
      summary: Altera um produto
      description: Altera os dados do produto referente ao seu ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nome do produto
                  example: Camisa Azul
                value:
                  type: number
                  description: Valor do produto
                  format: float
                  example: 16.097
                category_id:
                  type: integer
                  description: Id da categoria associada
                  example: 1
        required: true
      responses:
        200:
          description: Retorna o produto alterado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-codegen-request-body-name: layout
    delete:
      tags:
      - Products
      summary: Deleta um produto
      description: Deleta um produto referente ao seu ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No content
          content: {}
    patch:
      tags:
      - Products
      summary: Altera um produto
      description: Altera os dados do produto referente ao seu ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nome do produto
                  example: Camisa Azul
                value:
                  type: number
                  description: Valor do produto
                  format: float
                  example: 16.097
                category_id:
                  type: integer
                  description: Id da categoria associada
                  example: 1
        required: true
      responses:
        200:
          description: Retorna o produto alterado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-codegen-request-body-name: layout
  /categories:
    get:
      tags:
      - Categories
      summary: Lista os categorias
      description: |
        Lista as categorias, com diversas possibilidades de filtros usando o ransack (https://github.com/activerecord-hackery/ransack)
      parameters:
      - name: q[name_cont]
        in: query
        description: Exemplo de um filtro ransack que filtra produtos que possuam
          masculino no nome
        schema:
          type: string
          default: masculino
      responses:
        200:
          description: Retorna uma lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
      - Categories
      summary: Cria uma categoria
      description: Cria uma categoria e seus detalhes.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nome da Categoria
                      example: Masculino Adulto
        required: true
      responses:
        201:
          description: Retorna o categoria criada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        204:
          description: Retorna o categoria criada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      x-codegen-request-body-name: layout
  /categories/{id}:
    get:
      tags:
      - Categories
      summary: Exibe uma categoria
      description: Exibe uma categoria e seus atributos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Retorna os detalhes de uma categoria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    put:
      tags:
      - Categories
      summary: Altera uma categoria
      description: Altera os dados da categoria referente ao seu ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nome da Categoria
                  example: Masculino Adulto
        required: true
      responses:
        200:
          description: Retorna a categoria alterada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      x-codegen-request-body-name: layout
    delete:
      tags:
      - Categories
      summary: Deleta uma categoria
      description: Deleta uma categoria referente ao seu ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No content
          content: {}
    patch:
      tags:
      - Categories
      summary: Altera uma categoria
      description: Altera os dados da categoria referente ao seu ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nome da Categoria
                  example: Masculino Adulto
        required: true
      responses:
        200:
          description: Retorna a categoria alterada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      x-codegen-request-body-name: layout
  /categories/{id}/products:
    get:
      tags:
      - Categories
      - Products
      summary: Consulta lista de produtos por categoria
      description: |
        Lista os produtos por categoria, com diversas possibilidades de filtros usando o ransack (https://github.com/activerecord-hackery/ransack)
        Existe também um filtro adicional que ordena os produtos por popularidade `?popular=true`
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: popular
        in: query
        description: Ordena a lista de produtos em ordem decrescente de popularidade
        schema:
          type: boolean
          default: true
      - name: q[name_cont]
        in: query
        description: Exemplo de um filtro ransack que filtra produtos que possuam
          azul no nome
        schema:
          type: string
          default: azul
      responses:
        200:
          description: Retorna uma lista de Products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          description: Identificador único.
        attributes:
          type: object
          properties:
            name:
              type: string
              description: Nome do produto
              example: Camisa Azul
            total_access:
              type: integer
              description: Total de acessos recebidos
              example: 7
            value:
              type: number
              description: Valor do produto
              format: float
              example: 16.097
            category_id:
              type: integer
              description: Id da categoria associada
              example: 1
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    Category:
      type: object
      properties:
        id:
          type: integer
          description: Identificador único.
        attributes:
          type: object
          properties:
            name:
              type: string
              description: Nome da Categoria
              example: Masculino Adulto
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
